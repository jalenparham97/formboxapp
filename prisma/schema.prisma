// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

// Necessary for Next auth
model Account {
    id                String   @id @default(auto()) @map("_id") @db.ObjectId
    userId            String   @db.ObjectId
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?  @db.String
    access_token      String?  @db.String
    expires_at        Int?
    expires_in        Int?
    ext_expires_in    Int?
    token_type        String?
    scope             String?
    id_token          String?  @db.String
    session_state     String?
    user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    createdAt         DateTime @default(now())
    updatedAt         DateTime @updatedAt

    @@unique([provider, providerAccountId])
    @@map("accounts")
}

model Session {
    id           String   @id @default(auto()) @map("_id") @db.ObjectId
    sessionToken String   @unique
    userId       String   @db.ObjectId
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@map("sessions")
}

model User {
    id            String    @id @default(auto()) @map("_id") @db.ObjectId
    name          String?
    firstName     String?
    lastName      String?
    email         String?   @unique
    password      String?
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]

    stripeCustomerId         String?
    stripeSubscriptionId     String?
    stripePriceId            String?
    stripeSubscriptionStatus String?
    stripePlanNickname       String?
    stripeCancelAtPeriodEnd  Boolean?  @default(false)
    stripeCurrentPeriodEnd   DateTime?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("users")
}

model VerificationToken {
    id         String   @id @default(auto()) @map("_id") @db.ObjectId
    identifier String
    token      String   @unique
    expires    DateTime
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt

    @@unique([identifier, token])
    @@map("verificationTokens")
}
